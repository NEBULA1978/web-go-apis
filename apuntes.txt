Creamos archivo:
server.go
package main

import (
        "net/http"
        )

func main() {
        http.ListenAndServe(":8080", nil)
        }

Para ejecutar el servidor tenemos 2 opciones:
1ª)
go run server.go
Miramos en el navegador:
http://127.0.0.1:8080/

2ª)
curl 127.0.0.1:8080404 page not found


SERVIR CONTENIDO ESTATICO:
Serian los archivos css, javascript, imagenes ,ficheros .txt

Creamos carpeta:
 static y entramos dentro y creamos un archivo css:
 hola.css

AÑADIMOS AL ARCHIVO server.go:

package main

import (
        "net/http"
        )

func main() {
							//wardamos en variable fs y Definomos con http rl FileServer y le indicamos donde va a find archivos estaticos
				fs := http.FileServer(http.Dir("./static"))
				// Le indicamos al servidor http que  cuando le llegen peticiones en /static utilice  http.StripPrefix("/static/", fs))
				http.Handle("/static/", http.StripPrefix("/static/", fs))

        http.ListenAndServe(":8080", nil)
        }


Para ver el contenido estatico de hola.css:

1ª)POR CONSOLA BASH
curl 127.0.0.1:8080/static/hola.css

2ª)POR PAGINA WEB
http://127.0.0.1:8080/static/hola.css


AÑADIMOS A server.go hola mundo con index.html:
package main

import (
        "net/http"
        )

func main() {
							//wardamos en variable fs y Definomos con http rl FileServer y le indicamos donde va a find archivos estaticos
				fs := http.FileServer(http.Dir("./static"))
				// Le indicamos al servidor http que  cuando le llegen peticiones en /static utilice  http.StripPrefix("/static/", fs))
				http.Handle("/static/", http.StripPrefix("/static/", fs))

				// Definimos la ruta que llamará la función home
				http.HandleFunc("/", home)

        http.ListenAndServe(":8080", nil)
        }

/* Definimos la función home ||  objeto request que esta en la variable r y  tiene toda la informacion de la peticion que nos han hecho*/
func home(w http.ResponseWriter, r *http.Request) {
        html := "<html>";
        html += "<body>";
        html += "<h1>Hola Mundo</h1>";
        html += "</body>";
        html += "</html>";
				// Convertimos el string a un array de bytes
        w.Write( []byte(html) )
        }





